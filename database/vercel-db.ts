import { createClient } from '@libsql/client';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Vercel (Turso)
const TURSO_DATABASE_URL = process.env.TURSO_DATABASE_URL || 'file:./lepatage.db';
const TURSO_AUTH_TOKEN = process.env.TURSO_AUTH_TOKEN || '';

export const db = createClient({
  url: TURSO_DATABASE_URL,
  authToken: TURSO_AUTH_TOKEN || undefined,
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
export async function initDatabase() {
  try {
    // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    await db.execute(`
      CREATE TABLE IF NOT EXISTS categories (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
        slug TEXT NOT NULL UNIQUE,
        description TEXT,
        image TEXT,
        created_at TEXT DEFAULT CURRENT_TIMESTAMP,
        updated_at TEXT DEFAULT CURRENT_TIMESTAMP
      )
    `);

    await db.execute(`
      CREATE TABLE IF NOT EXISTS products (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
        slug TEXT NOT NULL UNIQUE,
        description TEXT,
        short_description TEXT,
        price REAL NOT NULL,
        sale_price REAL,
        category_id INTEGER,
        images TEXT,
        colors TEXT,
        sizes TEXT,
        in_stock INTEGER DEFAULT 1,
        featured INTEGER DEFAULT 0,
        is_new INTEGER DEFAULT 0,
        on_sale INTEGER DEFAULT 0,
        tags TEXT,
        created_at TEXT DEFAULT CURRENT_TIMESTAMP,
        updated_at TEXT DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (category_id) REFERENCES categories (id)
      )
    `);

    await db.execute(`
      CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        email TEXT NOT NULL UNIQUE,
        first_name TEXT,
        last_name TEXT,
        phone TEXT,
        password_hash TEXT,
        is_admin INTEGER DEFAULT 0,
        created_at TEXT DEFAULT CURRENT_TIMESTAMP,
        updated_at TEXT DEFAULT CURRENT_TIMESTAMP
      )
    `);

    await db.execute(`
      CREATE TABLE IF NOT EXISTS newsletter_subscriptions (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        email TEXT NOT NULL UNIQUE,
        is_active INTEGER DEFAULT 1,
        created_at TEXT DEFAULT CURRENT_TIMESTAMP
      )
    `);

    console.log('‚úÖ Database initialized successfully');
  } catch (error) {
    console.error('‚ùå Database initialization failed:', error);
    throw error;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
export async function seedDatabase() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ
    const categoriesCount = await db.execute('SELECT COUNT(*) as count FROM categories');
    const count = categoriesCount.rows[0]?.count;
    
    if (count && Number(count) > 0) {
      console.log('üìä Database already has data, skipping seed');
      return;
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    await db.execute(`
      INSERT INTO categories (name, slug, description, image) VALUES 
      ('–ö–æ—Ä—Å–µ—Ç—ã', 'corsets', '–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–µ –∫–æ—Ä—Å–µ—Ç—ã –¥–ª—è –æ—Å–æ–±—ã—Ö —Å–ª—É—á–∞–µ–≤', '/assets/corsets.jpg'),
      ('–°—É–º–∫–∏', 'bags', '–°—Ç–∏–ª—å–Ω—ã–µ —Å—É–º–∫–∏ –∏ –∫–ª–∞—Ç—á–∏', '/assets/bags.jpg'),
      ('–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã', 'accessories', '–£–∫—Ä–∞—à–µ–Ω–∏—è –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã', '/assets/accessories.jpg')
    `);

    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã
    await db.execute(`
      INSERT INTO products (name, slug, description, short_description, price, category_id, images, colors, sizes, featured, is_new, on_sale) VALUES 
      ('–ö–æ—Ä—Å–µ—Ç "–ê–≤–µ–≥—é"', 'corset-avegue', '–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π –∫–æ—Ä—Å–µ—Ç –∏–∑ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤', '–ö—Ä–∞—Å–∏–≤—ã–π –∫–æ—Ä—Å–µ—Ç –¥–ª—è –æ—Å–æ–±—ã—Ö —Å–ª—É—á–∞–µ–≤', 299.99, 1, '["/assets/corset-avegue.jpg"]', '["–ß–µ—Ä–Ω—ã–π", "–ö—Ä–∞—Å–Ω—ã–π", "–ë–µ–ª—ã–π"]', '["XS", "S", "M", "L", "XL"]', 1, 1, 1),
      ('–°—É–º–∫–∞ "–í–µ—á–µ—Ä–Ω—è—è"', 'evening-bag', '–°—Ç–∏–ª—å–Ω–∞—è –≤–µ—á–µ—Ä–Ω—è—è —Å—É–º–∫–∞ –¥–ª—è –æ—Å–æ–±—ã—Ö —Å–ª—É—á–∞–µ–≤', '–≠–ª–µ–≥–∞–Ω—Ç–Ω–∞—è —Å—É–º–∫–∞ –¥–ª—è –≤–µ—á–µ—Ä–Ω–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π', 199.99, 2, '["/assets/bags.jpg"]', '["–ß–µ—Ä–Ω—ã–π", "–ó–æ–ª–æ—Ç–æ–π"]', '["–û–¥–∏–Ω —Ä–∞–∑–º–µ—Ä"]', 1, 0, 0),
      ('–ö–æ–ª—å–µ "–†–æ—Å–∫–æ—à—å"', 'luxury-necklace', '–†–æ—Å–∫–æ—à–Ω–æ–µ –∫–æ–ª—å–µ –∏–∑ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤', '–≠–ª–µ–≥–∞–Ω—Ç–Ω–æ–µ –∫–æ–ª—å–µ –¥–ª—è –æ—Å–æ–±—ã—Ö —Å–ª—É—á–∞–µ–≤', 399.99, 3, '["/assets/jewelry.jpg"]', '["–°–µ—Ä–µ–±—Ä—è–Ω—ã–π", "–ó–æ–ª–æ—Ç–æ–π"]', '["–†–µ–≥—É–ª–∏—Ä—É–µ–º—ã–π"]', 1, 1, 1)
    `);

    // –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∞
    await db.execute(`
      INSERT INTO users (email, first_name, last_name, is_admin) VALUES 
      ('admin@lepatage.by', 'Admin', 'User', 1)
    `);

    console.log('üå± Database seeded successfully');
  } catch (error) {
    console.error('‚ùå Database seeding failed:', error);
    throw error;
  }
}
